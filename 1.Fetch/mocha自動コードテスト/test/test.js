// https://qiita.com/tarotaro1129/items/fa1129dc54efc74fba60

// assertモジュールを読み込んでいます。
// これはmocha自体にはアサーションという、
// プログラムの正当性をチェックする機能がないためです。
const assert = require('assert');

/*describe("テストの対象", () => { ... })を意味し、
  第二引数に、テストの処理を無名関数として渡します。

  つまり、「テストの対象」と「どういうテストを行うか」を宣言しています。
  Arrayとは配列を意味し、配列をテストの対象とすることを意味しています。*/
describe('Array', () => {
  
  /*テストの対象とどういうテストを行うかを宣言しています。
  関数処理の場合は'#'とつけるのが良いようです。
  indexOf()メソッドは引数に与えられた内容と同じ内容を持つ配列要素の内、
  最初のものの添字を返します。
  存在しない場合は -1 を返します。
  
  今回は、ArrayとindexOf()をテストの対象としています。*/
  describe('#indexOf()', () => {

    // it("テストの内容", () => { ... })
    // 第一引数では、テストがどんなテストであるのかを記述し、
    // 第二引数は、それをテストするための関数を書いています。
    it('指定された値が見つからない場合は -1 を返します。', () => {

      /*assert.equal(テスト対象, 想定されるテスト結果)となります。
      今回は、assert.equal([1, 2, 3].indexOf(4), -1)で
      配列[1, 2, 3]の中に、4という数字が入っているはずがないので、
      -1という数字を返すことを想定しています。 */
      assert.equal([1, 2, 3].indexOf(4), -1);

    });
  });
});

/*実行結果:VSCode-PowerShell

  test> npm test

> test@1.0.0 test
> mocha



  Array
    #indexOf()
      ✔ 指定された値が見つからない場合は -1 を返します。


  1 passing (6ms)

*/